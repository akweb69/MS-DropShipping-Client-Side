import React, { useEffect, useState } from "react";

const DropshipDashboard = () => {
    const [greeting, setGreeting] = useState("");
    const [daysLeft, setDaysLeft] = useState(0);

    useEffect(() => {
        // Dynamic greeting message
        const hour = new Date().getHours();
        if (hour < 12) setGreeting("‡¶∂‡ßÅ‡¶≠ ‡¶∏‡¶ï‡¶æ‡¶≤ üåÖ");
        else if (hour < 18) setGreeting("‡¶∂‡ßÅ‡¶≠ ‡¶Ö‡¶™‡¶∞‡¶æ‡¶π‡ßç‡¶® ‚òÄÔ∏è");
        else setGreeting("‡¶∂‡ßÅ‡¶≠ ‡¶∞‡¶æ‡¶§‡ßç‡¶∞‡¶ø üåô");

        // Subscription countdown
        const expiry = new Date("2025-11-25");
        const today = new Date();
        const diff = Math.ceil((expiry - today) / (1000 * 60 * 60 * 24));
        setDaysLeft(diff > 0 ? diff : 0);
    }, []);

    const premiumCards = [
        { title: "LetsDropShip ¬∑ PREMIUM", label: "‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶®‡ßç‡¶∏", amount: "‡ß≥ ‡ß®‡ß¶" },
        { title: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶≤‡¶æ‡¶≠", label: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", amount: "‡ß≥ ‡ß´‡ß´‡ß¶" },
        { title: "‡¶ó‡¶§ ‡ß≠ ‡¶¶‡¶ø‡¶®", label: "‡ß≠ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", amount: "‡ß≥ ‡ßß,‡ß®‡ß¶‡ß¶" },
        { title: "‡¶ó‡¶§ ‡ßß‡ß™ ‡¶¶‡¶ø‡¶®", label: "‡ßß‡ß™ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", amount: "‡ß≥ ‡ß®,‡ß´‡ß¶‡ß¶" },
        { title: "‡¶ó‡¶§ ‡ßß ‡¶Æ‡¶æ‡¶∏", label: "‡ßß ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", amount: "‡ß≥ ‡ß™,‡ßÆ‡ß¶‡ß¶" },
        { title: "‡¶∏‡¶æ‡¶∞‡¶æ ‡¶ú‡ßÄ‡¶¨‡¶®", label: "‡¶∏‡¶æ‡¶∞‡¶æ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", amount: "‡ß≥ ‡ß®‡ß´,‡ß¶‡ß¶‡ß¶" },
    ];

    const metrics = [
        { logo: "‚è≥", color: "bg-orange-500", label: "‡¶™‡ßá‡¶®‡ßç‡¶°‡¶ø‡¶Ç ‡¶∏‡ßá‡¶≤‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶®‡ßç‡¶∏", amount: "‡ß≥ ‡ß¶", change: "‡ß¶.‡ß¶‡ß¶%", type: "negative" },
        { logo: "üí∞", color: "bg-emerald-600", label: "‡¶Æ‡ßã‡¶ü ‡¶∞‡ßá‡¶≠‡¶ø‡¶®‡¶ø‡¶â", amount: "‡ß≥ ‡ß®‡ß¶", change: "+‡ßß.‡ß´‡ß®%", type: "positive" },
        { logo: "üìà", color: "bg-green-600", label: "‡¶Æ‡ßã‡¶ü ‡¶∏‡ßá‡¶≤‡¶∏", amount: "‡ß≥ ‡ßß‡ß®‡ß¶", change: "+‡ß©.‡ßØ‡ßØ%", type: "positive" },
        { logo: "üö¢", color: "bg-indigo-600", label: "‡¶á‡¶Æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶™‡¶£‡ßç‡¶Ø", amount: "‡ß≥ ‡ßß‡ß¶‡ß¶", change: "-‡ßß.‡ß®‡ß¶%", type: "negative" },
        { logo: "‚ùå", color: "bg-red-500", label: "‡¶∞‡¶ø‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞", amount: "‡ß≥ ‡ßß‡ß´", change: "-‡ßß.‡ß¶‡ß´%", type: "negative" },
        { logo: "‚úÖ", color: "bg-blue-500", label: "‡¶Æ‡ßã‡¶ü ‡¶∏‡¶æ‡¶ï‡¶∏‡ßá‡¶∏ ‡¶∏‡ßá‡¶≤‡¶∏", amount: "‡ß≥ ‡ßß‡ß®‡ß¶", change: "+‡ß®.‡ß©‡ß¶%", type: "positive" },
    ];

    const analytics = [
        { label: "‡¶∏‡¶´‡¶≤ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø (‡ß≥)", percent: 80, color: "bg-green-500" },
        { label: "‡¶™‡ßá‡¶®‡ßç‡¶°‡¶ø‡¶Ç ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü (‡ß≥)", percent: 25, color: "bg-orange-500" },
        { label: "‡¶∞‡¶ø‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ (‡ß≥)", percent: 10, color: "bg-red-500" },
        { label: "‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶Æ‡¶™‡ßã‡¶∞‡ßç‡¶ü (‡¶™‡¶£‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ)", percent: 50, color: "bg-blue-500" },
    ];

    return (
        <div className="bg-[#f0f2f5] min-h-screen flex flex-col items-center py-6 font-sans text-gray-800">
            {/* Greeting Section */}
            <div className="w-full max-w-md mb-4 px-4">
                <h2 className="text-2xl font-bold text-orange-500 drop-shadow-sm">{greeting}</h2>
                <p className="text-gray-700 mt-1">Boss, ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ‡•§</p>
            </div>

            {/* Scrollable Premium Cards */}
            <div className="w-full max-w-md overflow-x-auto pb-6 no-scrollbar scroll-smooth snap-x snap-mandatory">
                <div className="flex gap-4 px-4">
                    {premiumCards.map((card, i) => (
                        <div
                            key={i}
                            className="relative min-w-[320px] snap-start rounded-2xl bg-[#e0e5ec] p-6 shadow-[8px_8px_16px_#a3b1c6,-8px_-8px_16px_#ffffff] hover:translate-y-[-2px] hover:shadow-[10px_10px_20px_#a3b1c6,-10px_-10px_20px_#ffffff] transition-all duration-300"
                        >
                            <div className="bg-orange-500 text-white px-3 py-1 rounded-md text-sm font-semibold inline-block mb-3">
                                {card.title}
                            </div>
                            <div className="flex justify-between mt-2">
                                <span className="text-base font-medium text-gray-500">CARD HOLDER</span>
                                <span className="text-base font-bold">Boss</span>
                            </div>
                            <div className="flex justify-between mt-1">
                                <span className="text-base font-medium text-gray-500">EXPIRES</span>
                                <span className="text-base font-bold">‡ßß‡ßß/‡ß®‡ßØ</span>
                            </div>
                            <div className="flex justify-between items-end mt-6">
                                <span className="text-gray-600 text-lg">{card.label}</span>
                                <span className="text-4xl font-bold text-orange-500">{card.amount}</span>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* Dashboard Metrics */}
            <div className="w-full max-w-md px-4">
                <h3 className="text-lg font-bold mb-1">‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡ßç‡¶∏</h3>
                <hr className="border-t border-gray-200 mb-3" />
                <ul>
                    {metrics.map((m, i) => (
                        <li
                            key={i}
                            className={`flex justify-between items-center py-3 border-b border-gray-200 hover:bg-gray-50 transition-all ${m.type === "negative" ? "pl-2 border-l-4 border-orange-500" : ""
                                }`}
                        >
                            <div className="flex items-center">
                                <div className={`w-9 h-9 ${m.color} rounded-full flex items-center justify-center text-white font-bold mr-3`}>
                                    {m.logo}
                                </div>
                                <div>
                                    <div className="text-sm font-bold">{m.label}</div>
                                    <div className="text-xs text-gray-500">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø</div>
                                </div>
                            </div>
                            <div className="text-right">
                                <div className="font-bold text-sm">{m.amount}</div>
                                <div
                                    className={`text-xs font-semibold ${m.type === "positive" ? "text-green-500" : "text-red-500"
                                        }`}
                                >
                                    {m.change}
                                </div>
                            </div>
                        </li>
                    ))}
                </ul>
            </div>

            {/* Analytics Dashboard */}
            <div className="w-full max-w-md mt-6 bg-[#e0e5ec] rounded-xl p-4 shadow-[6px_6px_12px_#a3b1c6,-6px_-6px_12px_#ffffff]">
                <h3 className="text-lg font-bold mb-3">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏ (‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï)</h3>
                {analytics.map((a, i) => (
                    <div key={i} className="mb-3">
                        <div className="flex justify-between text-sm mb-1">
                            <span>{a.label}</span>
                            <span>{a.percent}%</span>
                        </div>
                        <div className="w-full h-2 bg-gray-200 rounded-full overflow-hidden">
                            <div
                                className={`${a.color} h-2 rounded-full transition-all duration-700`}
                                style={{ width: `${a.percent}%` }}
                            ></div>
                        </div>
                    </div>
                ))}
            </div>

            {/* Subscription Card */}
            <div className="w-full max-w-md mt-6 bg-[#e0e5ec] rounded-xl p-5 shadow-[6px_6px_12px_#a3b1c6,-6px_-6px_12px_#ffffff]">
                <div className="flex justify-between items-start mb-3">
                    <div>
                        <h4 className="font-bold text-base text-gray-800">‡¶ó‡ßã‡¶≤‡ßç‡¶° ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú</h4>
                        <p className="text-xs text-gray-500">‡¶Æ‡ßá‡¶Ø‡¶º‡¶æ‡¶¶: ‡ßß ‡¶¨‡¶õ‡¶∞</p>
                    </div>
                    <div className="text-right">
                        <div className="text-lg font-bold">{daysLeft} ‡¶¶‡¶ø‡¶® ‡¶¨‡¶æ‡¶ï‡¶ø</div>
                        <div className="text-xs text-gray-500">‡¶Æ‡ßá‡¶Ø‡¶º‡¶æ‡¶¶ ‡¶∂‡ßá‡¶∑: ‡ß®‡ß¶‡ß®‡ß´/‡ßß‡ßß/‡ß®‡ß´</div>
                    </div>
                </div>
                <div className="w-full h-3 bg-gray-300 rounded-full overflow-hidden">
                    <div
                        className={`h-full bg-gradient-to-r from-green-500 via-orange-400 to-red-500 rounded-full`}
                        style={{ width: `${Math.max(0, (daysLeft / 365) * 100)}%` }}
                    ></div>
                </div>
            </div>
        </div>
    );
};

export default DropshipDashboard;
